# -*- coding: utf-8 -*-
"""
幻觉检测主程序 - 调用入口
"""

import time
from hallucination_detector import HallucinationDetector

def main():
    """主函数"""
    
    # 示例数据
    original_text = """某局的忙音播放有问题
[meta-content-table]

|案例编码|TC0001251339|TC0001251339|关键字|忙音,播放,异步音|忙音,播放,异步音|忙音,播放,异步音|
|---|---|---|---|---|---|---|
|产品信息|LV1|LV2|LV3|LV4|产品名称|版本号|
|产品信息|云核心网|CS&IMS|Single Voice Core|VoBB|C&C08-128M|-----------------|
|故障类型|Level-1|其他|其他|其他|其他|其他|
|故障类型|Level-2|其他|其他|其他|其他|其他|
|故障类型|Level-3|-|-|-|-|-|
[/meta-content-table][meta-content-table]

|问题描述|某局升级（5K升6008），升级后发现忙音有问题，出现问题的用户是SPM模块带的。<br>无|某局升级（5K升6008），升级后发现忙音有问题，出现问题的用户是SPM模块带的。<br>无|某局升级（5K升6008），升级后发现忙音有问题，出现问题的用户是SPM模块带的。<br>无|某局升级（5K升6008），升级后发现忙音有问题，出现问题的用户是SPM模块带的。<br>无|某局升级（5K升6008），升级后发现忙音有问题，出现问题的用户是SPM模块带的。<br>无|
|---|---|---|---|---|---|
|处理过程|SPD板上加载的忙音有问题。|SPD板上加载的忙音有问题。|SPD板上加载的忙音有问题。|SPD板上加载的忙音有问题。|SPD板上加载的忙音有问题。|
|根因|N/A|N/A|N/A|N/A|N/A|
|解决方案|1、忙音是异步音，该问题一般是异步音有问题造成的，可以先查看一下SPD单板上是否已经加载该语音，如果没有加载，需要按照正确流程加载该语音，如果已经加载，需要重新加载该语音。<br>2、此局点的问题是升级前正常，升级后问题出现。<br>3、该局是SSP局，通过观察，发现该局有4块SPD单板配置了送异步音，由于只会有一块SPD单板放异步音，利用隔离SPD单板的方法，可以确认现在放异步音的单板。发现此单板是一块新扩的SPD单板，主要用来加载智能语音，加载语音后，异步音没有经过测试，但是因为此单板配置为送异步音，导致重新加载交换机后，选择了这块SPD单板播放异步音，出现上述故障。<br>4、SPD放异步音是按照主备用方式，正常运行时异步音由一块单板播放，强烈建议一个局点尤其是SSP局点，只需两块SPD配置为送异步音即可，并严格测试异步音加载是否正确，这样是可以保证异步音的正确播放的。如果多块SPD，尤其新增的SPD，配置了送异步音，如果加载完没有经过测试，很容易因为某种原因占用到此单板，导致异步音无法播放的严重问题。|1、忙音是异步音，该问题一般是异步音有问题造成的，可以先查看一下SPD单板上是否已经加载该语音，如果没有加载，需要按照正确流程加载该语音，如果已经加载，需要重新加载该语音。<br>2、此局点的问题是升级前正常，升级后问题出现。<br>3、该局是SSP局，通过观察，发现该局有4块SPD单板配置了送异步音，由于只会有一块SPD单板放异步音，利用隔离SPD单板的方法，可以确认现在放异步音的单板。发现此单板是一块新扩的SPD单板，主要用来加载智能语音，加载语音后，异步音没有经过测试，但是因为此单板配置为送异步音，导致重新加载交换机后，选择了这块SPD单板播放异步音，出现上述故障。<br>4、SPD放异步音是按照主备用方式，正常运行时异步音由一块单板播放，强烈建议一个局点尤其是SSP局点，只需两块SPD配置为送异步音即可，并严格测试异步音加载是否正确，这样是可以保证异步音的正确播放的。如果多块SPD，尤其新增的SPD，配置了送异步音，如果加载完没有经过测试，很容易因为某种原因占用到此单板，导致异步音无法播放的严重问题。|1、忙音是异步音，该问题一般是异步音有问题造成的，可以先查看一下SPD单板上是否已经加载该语音，如果没有加载，需要按照正确流程加载该语音，如果已经加载，需要重新加载该语音。<br>2、此局点的问题是升级前正常，升级后问题出现。<br>3、该局是SSP局，通过观察，发现该局有4块SPD单板配置了送异步音，由于只会有一块SPD单板放异步音，利用隔离SPD单板的方法，可以确认现在放异步音的单板。发现此单板是一块新扩的SPD单板，主要用来加载智能语音，加载语音后，异步音没有经过测试，但是因为此单板配置为送异步音，导致重新加载交换机后，选择了这块SPD单板播放异步音，出现上述故障。<br>4、SPD放异步音是按照主备用方式，正常运行时异步音由一块单板播放，强烈建议一个局点尤其是SSP局点，只需两块SPD配置为送异步音即可，并严格测试异步音加载是否正确，这样是可以保证异步音的正确播放的。如果多块SPD，尤其新增的SPD，配置了送异步音，如果加载完没有经过测试，很容易因为某种原因占用到此单板，导致异步音无法播放的严重问题。|1、忙音是异步音，该问题一般是异步音有问题造成的，可以先查看一下SPD单板上是否已经加载该语音，如果没有加载，需要按照正确流程加载该语音，如果已经加载，需要重新加载该语音。<br>2、此局点的问题是升级前正常，升级后问题出现。<br>3、该局是SSP局，通过观察，发现该局有4块SPD单板配置了送异步音，由于只会有一块SPD单板放异步音，利用隔离SPD单板的方法，可以确认现在放异步音的单板。发现此单板是一块新扩的SPD单板，主要用来加载智能语音，加载语音后，异步音没有经过测试，但是因为此单板配置为送异步音，导致重新加载交换机后，选择了这块SPD单板播放异步音，出现上述故障。<br>4、SPD放异步音是按照主备用方式，正常运行时异步音由一块单板播放，强烈建议一个局点尤其是SSP局点，只需两块SPD配置为送异步音即可，并严格测试异步音加载是否正确，这样是可以保证异步音的正确播放的。如果多块SPD，尤其新增的SPD，配置了送异步音，如果加载完没有经过测试，很容易因为某种原因占用到此单板，导致异步音无法播放的严重问题。|1、忙音是异步音，该问题一般是异步音有问题造成的，可以先查看一下SPD单板上是否已经加载该语音，如果没有加载，需要按照正确流程加载该语音，如果已经加载，需要重新加载该语音。<br>2、此局点的问题是升级前正常，升级后问题出现。<br>3、该局是SSP局，通过观察，发现该局有4块SPD单板配置了送异步音，由于只会有一块SPD单板放异步音，利用隔离SPD单板的方法，可以确认现在放异步音的单板。发现此单板是一块新扩的SPD单板，主要用来加载智能语音，加载语音后，异步音没有经过测试，但是因为此单板配置为送异步音，导致重新加载交换机后，选择了这块SPD单板播放异步音，出现上述故障。<br>4、SPD放异步音是按照主备用方式，正常运行时异步音由一块单板播放，强烈建议一个局点尤其是SSP局点，只需两块SPD配置为送异步音即可，并严格测试异步音加载是否正确，这样是可以保证异步音的正确播放的。如果多块SPD，尤其新增的SPD，配置了送异步音，如果加载完没有经过测试，很容易因为某种原因占用到此单板，导致异步音无法播放的严重问题。|
|建议与总结|-|-|-|-|-|
[/meta-content-table][meta-content-table]

|附件|-|-|-|-|-|
|---|---|---|---|---|---|
[/meta-content-table]
[meta-content-table]

|案例版本|V01|质量等级|C|
|---|---|---|---|
|发布时间|2004-07-29 08:00:00|更新时间|2022-09-22 21:43:16|
|作者|Zhao |优化者|-|
|案例语言|Chinese|问题单号|-|
|案例密级|Huawei Partner's Engineer|Huawei Partner's Engineer|Huawei Partner's Engineer|
[/meta-content-table]。"""

    generated_knowledge = """在某局升级后，发现忙音播放出现问题，主要涉及的是设备号的用户。问题的根源在于Device上加载的Host有误，具体表现为新扩展的Device配置了发送Host，但加载语音后未经过测试，导致重新加载交换机后选择了这块新扩展的Device播放Host，从而引发了故障。解决方案建议先检查Device上是否已加载Host，如未加载则需按流程加载，若已加载则重新加载。同时，强烈建议一个局点尤其是SSP局点，只需配置两块Device发送Host，并严格测试加载是否正确，以确保Host的正常播放。"""

    print("="*60)
    print("LLM幻觉检测系统")
    print("="*60)
    
    print("原始案例描述:")
    print("-"*40)
    print(original_text[:200] + "..." if len(original_text) > 200 else original_text)
    
    print("\n生成的知识:")
    print("-"*40)
    print(generated_knowledge)
    
    # 初始化检测器
    detector = HallucinationDetector()
    
    # 执行检测
    print("\n开始检测...")
    start_time = time.time()
    result = detector.detect_hallucination(original_text, generated_knowledge)
    end_time = time.time()
    
    # 打印结果
    detector.print_result(result)
    
    # 保存结果
    detector.save_result(result)
    
    print(f"\n检测耗时: {end_time - start_time:.2f}秒")

def detect_custom_text(original_text: str, generated_knowledge: str, save_filename: str = None):
    """
    检测自定义文本
    
    Args:
        original_text: 原始案例文本
        generated_knowledge: 生成的知识文本
        save_filename: 保存文件名（可选）
    """
    detector = HallucinationDetector()
    
    print("开始检测自定义文本...")
    start_time = time.time()
    result = detector.detect_hallucination(original_text, generated_knowledge)
    end_time = time.time()
    
    # 打印结果
    detector.print_result(result)
    
    # 保存结果
    if save_filename:
        detector.save_result(result, save_filename)
    else:
        detector.save_result(result)
    
    print(f"检测耗时: {end_time - start_time:.2f}秒")
    
    return result

if __name__ == "__main__":
    main()
